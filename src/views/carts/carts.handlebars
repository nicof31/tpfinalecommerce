<!DOCTYPE html>
<html lang="es">
<head>
  <title>Carrito de Compras</title>
  <style>
    body {
      background-color: black;
      color: white;
      font-family: 'Arial', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    .product-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-around;
    }

    .product-card {
      border: 1px solid #ccc;
      padding: 10px;
      margin: 10px;
      width: 350px; 
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
    }

    .product-thumbnail {
      width: 100%;
      height: 150px;
      object-fit: cover;
    }

    .product-title {
      font-size: 18px;
      font-weight: bold;
      margin: 5px 0;
    }

    .product-description {
      font-size: 14px;
      color: white;
      margin-bottom: 10px;
    }

    .product-code {
      font-size: 14px;
      margin-bottom: 5px;
    }

    .product-stock {
      font-size: 14px;
      margin-bottom: 5px;
    }

    .product-price {
      font-size: 16px;
      font-weight: bold;
      color: #009688;
      margin-bottom: 10px;
    }

    .product-quantity {
      font-size: 14px;
    }

    .product-total-price {
      font-size: 16px;
      font-weight: bold;
      color: #5cb85c; 
      margin-bottom: 10px;
    }

    h1 {
      color: #009688;
    }

    h3 {
      font-size: 30px;
      font-weight: bold;
      color: #5cb85c; 
    }

    .btn-container {
      display: flex;
      justify-content: space-between;
      width: 100%;
      margin-top: 10px;
    }

    .btn {
      flex: 1;
      margin-right: 5px;
      padding: 10px 20px;
      border-radius: 4px;
    }

    .btn-primary {
      background-color: #337ab7; 
      color: white;
    }

    .btn-danger {
      background-color: #d9534f; 
      color: white;
    }

    .btn-info {
      background-color: #5bc0de; 
      color: white;
    }

    .btn-success {
      background-color: #5cb85c; 
      color: white;
    }

    .btn-warning {
      background-color: #f0ad4e; 
      color: white;
    }

    .product-button-container {
      display: flex;
      justify-content: space-between;
      margin-top: 10px;
    }

    .product-button-container button {
      flex: 1;
    }
  </style>
</head>
<body>
  <h1>Carrito de Compras</h1>
  <h2>Detalles del Carrito</h2>
  <p>ID del Carrito: {{cart._id}}</p>
  <h3>Precio total del carrito de Productos con stock: $ {{cart.totalCartPrice}}</h3>

  <div class="btn-container">
    <button onclick="volveroProducts()" class="btn btn-info">Volver a Products</button>
    <button onclick="realizarCompra('{{cart._id}}')" class="btn btn-success" id="realizarCompraButton" {{#unless cart.products}}disabled{{/unless}}>Realizar Compra (purchase)</button>
    <button onclick="deleteProductFromCart('{{cart._id}}')" class="btn btn-danger" {{#unless cart.products}}disabled{{/unless}}>Delete Products from Cart</button>
  </div>

  <div class="product-container">
    {{#if cart.products}}
      {{#each cart.products}}
        <div class="product-card">
          <div class="product-title">{{#if this.product}}{{this.product.title}}{{else}}{{this.title}}{{/if}}</div>
          <div class="product-description">Description:{{#if this.product}}{{this.product.description}}{{else}}{{this.description}}{{/if}}</div>
          <div class="product-code">Code:{{#if this.product}}{{this.product.code}}{{else}}{{this.code}}{{/if}}</div>
          <div class="product-stock">Stock:{{#if this.product}}{{this.product.stock}}{{else}}{{this.stock}}{{/if}}</div>
          <div class="product-price">Price unitary: $ {{#if this.product}}{{this.product.price}}{{else}}{{this.price}}{{/if}}</div>
          <div class="product-quantity">Quantity: {{this.quantity}}</div>

          <div class="product-button-container">
            <button onclick="increaseQuantity('{{../cart._id}}', '{{this.product._id}}')" class="btn btn-success"{{#unless this.product.stock}}disabled{{/unless}}>Aumentar Cantidad</button>
            <button onclick="decreaseQuantity('{{../cart._id}}', '{{this.product._id}}')" class="btn btn-warning"{{#unless this.quantity}}disabled{{/unless}}>Disminuir Cantidad</button>
          </div>

          <div class="product-total-price">Precio total: $ {{this.totalPrice}}</div>
          <button onclick="deleteProduct('{{../cart._id}}', '{{this.product._id}}')" class="btn btn-danger">Eliminar Producto</button>
        </div>
      {{/each}}
    {{else}}
      <p>No hay productos en el carrito.</p>
    {{/if}}
  </div>

  <script>
    function volveroProducts() {
      window.location.href = '/products';
    }

    function deleteProductFromCart(cartId) {
      fetch(`http://localhost:8080/api/carts/${cartId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
          alert(`Los todos los productos del carrito _id: ${cartId} se eliminaron correctamente`);
        window.location.reload();
      })
      .catch(error => {
        console.log(`Error al eliminar productos del carrito: ${error}`);
        alert(`Ocurrió un error al eliminar los productos del carrito`);
      });
    }

    function deleteProduct(cartId, productId) {
      fetch(`http://localhost:8080/api/carts/${cartId}/products/${productId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
        alert(`El producto con _id: ${productId} se eliminó correctamente del carrito`);
        window.location.reload();
      })
      .catch(error => {
        console.log(`Error al eliminar producto del carrito: ${error}`);
        alert(`Ocurrió un error al eliminar el producto del carrito`);
      });
    }

    function increaseQuantity(cartId, productId) {
      fetch(`http://localhost:8080/api/carts/${productId}/?accion=aumentar`, {
        method: 'POST'
      })
      .then(response => response.json())
      .then(data => {
        alert(`La cantidad del producto con _id: ${productId} se aumentó correctamente`);
        window.location.reload();
      })
      .catch(error => {
        console.log(`Error al aumentar la cantidad del producto: ${error}`);
        alert(`Ocurrió un error al aumentar la cantidad del producto`);
      });
    }

    function decreaseQuantity(cartId, productId) {
      fetch(`http://localhost:8080/api/carts/${productId}/?accion=disminuir`, {
        method: 'POST'
      })
      .then(response => response.json())
      .then(data => {
        alert(`La cantidad del producto con _id: ${productId} se disminuyó correctamente`);
        window.location.reload();
      })
      .catch(error => {
        console.log(`Error al disminuir la cantidad del producto: ${error}`);
        alert(`Ocurrió un error al disminuir la cantidad del producto`);
      });
    }

    function realizarCompra(cartId) {
      fetch(`http://localhost:8080/api/carts/${cartId}/purchase`, {
        method: 'POST'
      }) 
      .then(response => response.json())
      .then(data => {
        alert(`¡Compra realizada! Gracias por su compra._id: ${cartId}`);
        window.location.href = '/products';
      })
      .catch(error => {
        console.log(`Error al realizar la compra: ${error}`);
        alert(`Ocurrió un error al realizar la compra`);
      });
    }
  </script>
</body>
</html>
